/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Hello, HelloInterface } from "../../contracts/Hello";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newGreetie",
        type: "string",
      },
    ],
    name: "setGreetie",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600781526020017f48656c6c6f2c20000000000000000000000000000000000000000000000000008152506001908051906020019061004f929190610196565b506040518060400160405280600681526020017f576f726c642100000000000000000000000000000000000000000000000000008152506002908051906020019061009b929190610196565b503480156100a857600080fd5b506100c56100ba6100ca60201b60201c565b6100d260201b60201c565b61029a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546101a290610268565b90600052602060002090601f0160209004810192826101c4576000855561020b565b82601f106101dd57805160ff191683800117855561020b565b8280016001018555821561020b579182015b8281111561020a5782518255916020019190600101906101ef565b5b509050610218919061021c565b5090565b5b8082111561023557600081600090555060010161021d565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061028057607f821691505b6020821081141561029457610293610239565b5b50919050565b610855806102a96000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063cfae321714610084578063f2fde38b146100a2578063fe3cb418146100be575b600080fd5b6100646100da565b005b61006e6100ee565b60405161007b9190610412565b60405180910390f35b61008c610117565b60405161009991906104c6565b60405180910390f35b6100bc60048036038101906100b7919061051e565b610142565b005b6100d860048036038101906100d391906105b0565b6101c6565b005b6100e26101e4565b6100ec6000610262565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001600260405160200161012e9291906106fd565b604051602081830303815290604052905090565b61014a6101e4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156101ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b190610793565b60405180910390fd5b6101c381610262565b50565b6101ce6101e4565b8181600291906101df92919061032e565b505050565b6101ec610326565b73ffffffffffffffffffffffffffffffffffffffff1661020a6100ee565b73ffffffffffffffffffffffffffffffffffffffff1614610260576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610257906107ff565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b82805461033a9061062c565b90600052602060002090601f01602090048101928261035c57600085556103a3565b82601f1061037557803560ff19168380011785556103a3565b828001600101855582156103a3579182015b828111156103a2578235825591602001919060010190610387565b5b5090506103b091906103b4565b5090565b5b808211156103cd5760008160009055506001016103b5565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103fc826103d1565b9050919050565b61040c816103f1565b82525050565b60006020820190506104276000830184610403565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561046757808201518184015260208101905061044c565b83811115610476576000848401525b50505050565b6000601f19601f8301169050919050565b60006104988261042d565b6104a28185610438565b93506104b2818560208601610449565b6104bb8161047c565b840191505092915050565b600060208201905081810360008301526104e0818461048d565b905092915050565b600080fd5b600080fd5b6104fb816103f1565b811461050657600080fd5b50565b600081359050610518816104f2565b92915050565b600060208284031215610534576105336104e8565b5b600061054284828501610509565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126105705761056f61054b565b5b8235905067ffffffffffffffff81111561058d5761058c610550565b5b6020830191508360018202830111156105a9576105a8610555565b5b9250929050565b600080602083850312156105c7576105c66104e8565b5b600083013567ffffffffffffffff8111156105e5576105e46104ed565b5b6105f18582860161055a565b92509250509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061064457607f821691505b60208210811415610658576106576105fd565b5b50919050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461068b8161062c565b610695818661065e565b945060018216600081146106b057600181146106c1576106f4565b60ff198316865281860193506106f4565b6106ca85610669565b60005b838110156106ec578154818901526001820191506020810190506106cd565b838801955050505b50505092915050565b6000610709828561067e565b9150610715828461067e565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061077d602683610438565b915061078882610721565b604082019050919050565b600060208201905081810360008301526107ac81610770565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006107e9602083610438565b91506107f4826107b3565b602082019050919050565b60006020820190508181036000830152610818816107dc565b905091905056fea26469706673582212204873dac186d4bafc05b7160d6977d1008a4efa6237b134432cef9a9d1e0d295f64736f6c63430008090033";

type HelloConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Hello__factory extends ContractFactory {
  constructor(...args: HelloConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Hello> {
    return super.deploy(overrides || {}) as Promise<Hello>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Hello {
    return super.attach(address) as Hello;
  }
  override connect(signer: Signer): Hello__factory {
    return super.connect(signer) as Hello__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloInterface {
    return new utils.Interface(_abi) as HelloInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Hello {
    return new Contract(address, _abi, signerOrProvider) as Hello;
  }
}
